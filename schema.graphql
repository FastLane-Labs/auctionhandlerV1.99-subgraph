type CustomPaymentProcessorPaid @entity(immutable: true) {
  id: Bytes!
  payor: Bytes! # address
  payee: Bytes! # address
  paymentProcessor: Bytes! # address
  totalAmount: BigInt! # uint256
  startBlock: BigInt! # uint256
  endBlock: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayFastBid @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  validator: Bytes! # address
  success: Boolean! # bool
  bidAmount: BigInt! # uint256
  searcherContractAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayFeeCollected @entity(immutable: true) {
  id: Bytes!
  payor: Bytes! # address
  payee: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayFlashBid @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  oppTxHash: Bytes! # bytes32
  validator: Bytes! # address
  bidAmount: BigInt! # uint256
  amountPaid: BigInt! # uint256
  searcherContractAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayFlashBidWithRefund @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  oppTxHash: Bytes! # bytes32
  validator: Bytes! # address
  bidAmount: BigInt! # uint256
  amountPaid: BigInt! # uint256
  searcherContractAddress: Bytes! # address
  refundedAmount: BigInt! # uint256
  refundAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayInvestigateOutcome @entity(immutable: true) {
  id: Bytes!
  validator: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt! # uint256
  existingBidAmount: BigInt! # uint256
  newBidAmount: BigInt! # uint256
  existingGasPrice: BigInt! # uint256
  newGasPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayProcessingPaidValidator @entity(immutable: true) {
  id: Bytes!
  validator: Bytes! # address
  validatorPayment: BigInt! # uint256
  initiator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelaySimulatedFlashBid @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  amount: BigInt! # uint256
  oppTxHash: Bytes! # bytes32
  validator: Bytes! # address
  searcherContractAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayValidatorPayeeUpdated @entity(immutable: true) {
  id: Bytes!
  validator: Bytes! # address
  payee: Bytes! # address
  initiator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayWithdrawStuckERC20 @entity(immutable: true) {
  id: Bytes!
  receiver: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RelayWithdrawStuckNativeToken @entity(immutable: true) {
  id: Bytes!
  receiver: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
