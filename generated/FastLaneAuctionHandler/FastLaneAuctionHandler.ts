// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CustomPaymentProcessorPaid extends ethereum.Event {
  get params(): CustomPaymentProcessorPaid__Params {
    return new CustomPaymentProcessorPaid__Params(this);
  }
}

export class CustomPaymentProcessorPaid__Params {
  _event: CustomPaymentProcessorPaid;

  constructor(event: CustomPaymentProcessorPaid) {
    this._event = event;
  }

  get payor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get payee(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentProcessor(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get totalAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get startBlock(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class RelayFastBid extends ethereum.Event {
  get params(): RelayFastBid__Params {
    return new RelayFastBid__Params(this);
  }
}

export class RelayFastBid__Params {
  _event: RelayFastBid;

  constructor(event: RelayFastBid) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get validator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get success(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get bidAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get searcherContractAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class RelayFeeCollected extends ethereum.Event {
  get params(): RelayFeeCollected__Params {
    return new RelayFeeCollected__Params(this);
  }
}

export class RelayFeeCollected__Params {
  _event: RelayFeeCollected;

  constructor(event: RelayFeeCollected) {
    this._event = event;
  }

  get payor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get payee(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RelayFlashBid extends ethereum.Event {
  get params(): RelayFlashBid__Params {
    return new RelayFlashBid__Params(this);
  }
}

export class RelayFlashBid__Params {
  _event: RelayFlashBid;

  constructor(event: RelayFlashBid) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oppTxHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get validator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get bidAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountPaid(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get searcherContractAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class RelayFlashBidWithRefund extends ethereum.Event {
  get params(): RelayFlashBidWithRefund__Params {
    return new RelayFlashBidWithRefund__Params(this);
  }
}

export class RelayFlashBidWithRefund__Params {
  _event: RelayFlashBidWithRefund;

  constructor(event: RelayFlashBidWithRefund) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oppTxHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get validator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get bidAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountPaid(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get searcherContractAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get refundedAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get refundAddress(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class RelayInvestigateOutcome extends ethereum.Event {
  get params(): RelayInvestigateOutcome__Params {
    return new RelayInvestigateOutcome__Params(this);
  }
}

export class RelayInvestigateOutcome__Params {
  _event: RelayInvestigateOutcome;

  constructor(event: RelayInvestigateOutcome) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get existingBidAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newBidAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get existingGasPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get newGasPrice(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RelayProcessingPaidValidator extends ethereum.Event {
  get params(): RelayProcessingPaidValidator__Params {
    return new RelayProcessingPaidValidator__Params(this);
  }
}

export class RelayProcessingPaidValidator__Params {
  _event: RelayProcessingPaidValidator;

  constructor(event: RelayProcessingPaidValidator) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get validatorPayment(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RelaySimulatedFlashBid extends ethereum.Event {
  get params(): RelaySimulatedFlashBid__Params {
    return new RelaySimulatedFlashBid__Params(this);
  }
}

export class RelaySimulatedFlashBid__Params {
  _event: RelaySimulatedFlashBid;

  constructor(event: RelaySimulatedFlashBid) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get oppTxHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get validator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get searcherContractAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class RelayValidatorPayeeUpdated extends ethereum.Event {
  get params(): RelayValidatorPayeeUpdated__Params {
    return new RelayValidatorPayeeUpdated__Params(this);
  }
}

export class RelayValidatorPayeeUpdated__Params {
  _event: RelayValidatorPayeeUpdated;

  constructor(event: RelayValidatorPayeeUpdated) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get payee(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get initiator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RelayWithdrawStuckERC20 extends ethereum.Event {
  get params(): RelayWithdrawStuckERC20__Params {
    return new RelayWithdrawStuckERC20__Params(this);
  }
}

export class RelayWithdrawStuckERC20__Params {
  _event: RelayWithdrawStuckERC20;

  constructor(event: RelayWithdrawStuckERC20) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RelayWithdrawStuckNativeToken extends ethereum.Event {
  get params(): RelayWithdrawStuckNativeToken__Params {
    return new RelayWithdrawStuckNativeToken__Params(this);
  }
}

export class RelayWithdrawStuckNativeToken__Params {
  _event: RelayWithdrawStuckNativeToken;

  constructor(event: RelayWithdrawStuckNativeToken) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FastLaneAuctionHandler__fulfilledPGAMapResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getLowestGasPrice(): BigInt {
    return this.value0;
  }

  getLowestFastPrice(): BigInt {
    return this.value1;
  }

  getLowestTotalPrice(): BigInt {
    return this.value2;
  }
}

export class FastLaneAuctionHandler extends ethereum.SmartContract {
  static bind(address: Address): FastLaneAuctionHandler {
    return new FastLaneAuctionHandler("FastLaneAuctionHandler", address);
  }

  collectFees(): BigInt {
    let result = super.call("collectFees", "collectFees():(uint256)", []);

    return result[0].toBigInt();
  }

  try_collectFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("collectFees", "collectFees():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fulfilledAuctionsMap(param0: Bytes): BigInt {
    let result = super.call(
      "fulfilledAuctionsMap",
      "fulfilledAuctionsMap(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_fulfilledAuctionsMap(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fulfilledAuctionsMap",
      "fulfilledAuctionsMap(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fulfilledPGAMap(
    param0: BigInt
  ): FastLaneAuctionHandler__fulfilledPGAMapResult {
    let result = super.call(
      "fulfilledPGAMap",
      "fulfilledPGAMap(uint256):(uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new FastLaneAuctionHandler__fulfilledPGAMapResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_fulfilledPGAMap(
    param0: BigInt
  ): ethereum.CallResult<FastLaneAuctionHandler__fulfilledPGAMapResult> {
    let result = super.tryCall(
      "fulfilledPGAMap",
      "fulfilledPGAMap(uint256):(uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FastLaneAuctionHandler__fulfilledPGAMapResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getValidatorBalance(_validator: Address): BigInt {
    let result = super.call(
      "getValidatorBalance",
      "getValidatorBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_validator)]
    );

    return result[0].toBigInt();
  }

  try_getValidatorBalance(_validator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getValidatorBalance",
      "getValidatorBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_validator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getValidatorBlockOfLastWithdraw(_validator: Address): BigInt {
    let result = super.call(
      "getValidatorBlockOfLastWithdraw",
      "getValidatorBlockOfLastWithdraw(address):(uint256)",
      [ethereum.Value.fromAddress(_validator)]
    );

    return result[0].toBigInt();
  }

  try_getValidatorBlockOfLastWithdraw(
    _validator: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getValidatorBlockOfLastWithdraw",
      "getValidatorBlockOfLastWithdraw(address):(uint256)",
      [ethereum.Value.fromAddress(_validator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getValidatorPayee(_validator: Address): Address {
    let result = super.call(
      "getValidatorPayee",
      "getValidatorPayee(address):(address)",
      [ethereum.Value.fromAddress(_validator)]
    );

    return result[0].toAddress();
  }

  try_getValidatorPayee(_validator: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getValidatorPayee",
      "getValidatorPayee(address):(address)",
      [ethereum.Value.fromAddress(_validator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getValidatorRecipient(_validator: Address): Address {
    let result = super.call(
      "getValidatorRecipient",
      "getValidatorRecipient(address):(address)",
      [ethereum.Value.fromAddress(_validator)]
    );

    return result[0].toAddress();
  }

  try_getValidatorRecipient(_validator: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getValidatorRecipient",
      "getValidatorRecipient(address):(address)",
      [ethereum.Value.fromAddress(_validator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isPayeeTimeLocked(_validator: Address): boolean {
    let result = super.call(
      "isPayeeTimeLocked",
      "isPayeeTimeLocked(address):(bool)",
      [ethereum.Value.fromAddress(_validator)]
    );

    return result[0].toBoolean();
  }

  try_isPayeeTimeLocked(_validator: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPayeeTimeLocked",
      "isPayeeTimeLocked(address):(bool)",
      [ethereum.Value.fromAddress(_validator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidPayee(_validator: Address, _payee: Address): boolean {
    let result = super.call(
      "isValidPayee",
      "isValidPayee(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_validator),
        ethereum.Value.fromAddress(_payee)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidPayee(
    _validator: Address,
    _payee: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidPayee",
      "isValidPayee(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_validator),
        ethereum.Value.fromAddress(_payee)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  payeeMap(param0: Address): Address {
    let result = super.call("payeeMap", "payeeMap(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_payeeMap(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("payeeMap", "payeeMap(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  validatorsBalanceMap(param0: Address): BigInt {
    let result = super.call(
      "validatorsBalanceMap",
      "validatorsBalanceMap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_validatorsBalanceMap(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "validatorsBalanceMap",
      "validatorsBalanceMap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  validatorsRefundShareMap(param0: Address): BigInt {
    let result = super.call(
      "validatorsRefundShareMap",
      "validatorsRefundShareMap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_validatorsRefundShareMap(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "validatorsRefundShareMap",
      "validatorsRefundShareMap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  validatorsTotal(): BigInt {
    let result = super.call(
      "validatorsTotal",
      "validatorsTotal():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_validatorsTotal(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "validatorsTotal",
      "validatorsTotal():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ClearValidatorPayeeCall extends ethereum.Call {
  get inputs(): ClearValidatorPayeeCall__Inputs {
    return new ClearValidatorPayeeCall__Inputs(this);
  }

  get outputs(): ClearValidatorPayeeCall__Outputs {
    return new ClearValidatorPayeeCall__Outputs(this);
  }
}

export class ClearValidatorPayeeCall__Inputs {
  _call: ClearValidatorPayeeCall;

  constructor(call: ClearValidatorPayeeCall) {
    this._call = call;
  }
}

export class ClearValidatorPayeeCall__Outputs {
  _call: ClearValidatorPayeeCall;

  constructor(call: ClearValidatorPayeeCall) {
    this._call = call;
  }
}

export class CollectFeesCall extends ethereum.Call {
  get inputs(): CollectFeesCall__Inputs {
    return new CollectFeesCall__Inputs(this);
  }

  get outputs(): CollectFeesCall__Outputs {
    return new CollectFeesCall__Outputs(this);
  }
}

export class CollectFeesCall__Inputs {
  _call: CollectFeesCall;

  constructor(call: CollectFeesCall) {
    this._call = call;
  }
}

export class CollectFeesCall__Outputs {
  _call: CollectFeesCall;

  constructor(call: CollectFeesCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CollectFeesCustomCall extends ethereum.Call {
  get inputs(): CollectFeesCustomCall__Inputs {
    return new CollectFeesCustomCall__Inputs(this);
  }

  get outputs(): CollectFeesCustomCall__Outputs {
    return new CollectFeesCustomCall__Outputs(this);
  }
}

export class CollectFeesCustomCall__Inputs {
  _call: CollectFeesCustomCall;

  constructor(call: CollectFeesCustomCall) {
    this._call = call;
  }

  get paymentProcessor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class CollectFeesCustomCall__Outputs {
  _call: CollectFeesCustomCall;

  constructor(call: CollectFeesCustomCall) {
    this._call = call;
  }
}

export class FastBidWrapperCall extends ethereum.Call {
  get inputs(): FastBidWrapperCall__Inputs {
    return new FastBidWrapperCall__Inputs(this);
  }

  get outputs(): FastBidWrapperCall__Outputs {
    return new FastBidWrapperCall__Outputs(this);
  }
}

export class FastBidWrapperCall__Inputs {
  _call: FastBidWrapperCall;

  constructor(call: FastBidWrapperCall) {
    this._call = call;
  }

  get msgSender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fastPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get searcherToAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get searcherCallData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class FastBidWrapperCall__Outputs {
  _call: FastBidWrapperCall;

  constructor(call: FastBidWrapperCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PayValidatorFeeCall extends ethereum.Call {
  get inputs(): PayValidatorFeeCall__Inputs {
    return new PayValidatorFeeCall__Inputs(this);
  }

  get outputs(): PayValidatorFeeCall__Outputs {
    return new PayValidatorFeeCall__Outputs(this);
  }
}

export class PayValidatorFeeCall__Inputs {
  _call: PayValidatorFeeCall;

  constructor(call: PayValidatorFeeCall) {
    this._call = call;
  }

  get _payor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PayValidatorFeeCall__Outputs {
  _call: PayValidatorFeeCall;

  constructor(call: PayValidatorFeeCall) {
    this._call = call;
  }
}

export class PaymentCallbackCall extends ethereum.Call {
  get inputs(): PaymentCallbackCall__Inputs {
    return new PaymentCallbackCall__Inputs(this);
  }

  get outputs(): PaymentCallbackCall__Outputs {
    return new PaymentCallbackCall__Outputs(this);
  }
}

export class PaymentCallbackCall__Inputs {
  _call: PaymentCallbackCall;

  constructor(call: PaymentCallbackCall) {
    this._call = call;
  }

  get validator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get payee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class PaymentCallbackCall__Outputs {
  _call: PaymentCallbackCall;

  constructor(call: PaymentCallbackCall) {
    this._call = call;
  }
}

export class SimulateFlashBidCall extends ethereum.Call {
  get inputs(): SimulateFlashBidCall__Inputs {
    return new SimulateFlashBidCall__Inputs(this);
  }

  get outputs(): SimulateFlashBidCall__Outputs {
    return new SimulateFlashBidCall__Outputs(this);
  }
}

export class SimulateFlashBidCall__Inputs {
  _call: SimulateFlashBidCall;

  constructor(call: SimulateFlashBidCall) {
    this._call = call;
  }

  get bidAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get oppTxHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get searcherToAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get searcherCallData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SimulateFlashBidCall__Outputs {
  _call: SimulateFlashBidCall;

  constructor(call: SimulateFlashBidCall) {
    this._call = call;
  }
}

export class SubmitFastBidCall extends ethereum.Call {
  get inputs(): SubmitFastBidCall__Inputs {
    return new SubmitFastBidCall__Inputs(this);
  }

  get outputs(): SubmitFastBidCall__Outputs {
    return new SubmitFastBidCall__Outputs(this);
  }
}

export class SubmitFastBidCall__Inputs {
  _call: SubmitFastBidCall;

  constructor(call: SubmitFastBidCall) {
    this._call = call;
  }

  get fastGasPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get searcherToAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get searcherCallData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SubmitFastBidCall__Outputs {
  _call: SubmitFastBidCall;

  constructor(call: SubmitFastBidCall) {
    this._call = call;
  }
}

export class SubmitFlashBidCall extends ethereum.Call {
  get inputs(): SubmitFlashBidCall__Inputs {
    return new SubmitFlashBidCall__Inputs(this);
  }

  get outputs(): SubmitFlashBidCall__Outputs {
    return new SubmitFlashBidCall__Outputs(this);
  }
}

export class SubmitFlashBidCall__Inputs {
  _call: SubmitFlashBidCall;

  constructor(call: SubmitFlashBidCall) {
    this._call = call;
  }

  get bidAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get oppTxHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get searcherToAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get searcherCallData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SubmitFlashBidCall__Outputs {
  _call: SubmitFlashBidCall;

  constructor(call: SubmitFlashBidCall) {
    this._call = call;
  }
}

export class SubmitFlashBidWithRefundCall extends ethereum.Call {
  get inputs(): SubmitFlashBidWithRefundCall__Inputs {
    return new SubmitFlashBidWithRefundCall__Inputs(this);
  }

  get outputs(): SubmitFlashBidWithRefundCall__Outputs {
    return new SubmitFlashBidWithRefundCall__Outputs(this);
  }
}

export class SubmitFlashBidWithRefundCall__Inputs {
  _call: SubmitFlashBidWithRefundCall;

  constructor(call: SubmitFlashBidWithRefundCall) {
    this._call = call;
  }

  get bidAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get oppTxHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get refundAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get searcherToAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get searcherCallData(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SubmitFlashBidWithRefundCall__Outputs {
  _call: SubmitFlashBidWithRefundCall;

  constructor(call: SubmitFlashBidWithRefundCall) {
    this._call = call;
  }
}

export class SyncStuckNativeTokenCall extends ethereum.Call {
  get inputs(): SyncStuckNativeTokenCall__Inputs {
    return new SyncStuckNativeTokenCall__Inputs(this);
  }

  get outputs(): SyncStuckNativeTokenCall__Outputs {
    return new SyncStuckNativeTokenCall__Outputs(this);
  }
}

export class SyncStuckNativeTokenCall__Inputs {
  _call: SyncStuckNativeTokenCall;

  constructor(call: SyncStuckNativeTokenCall) {
    this._call = call;
  }
}

export class SyncStuckNativeTokenCall__Outputs {
  _call: SyncStuckNativeTokenCall;

  constructor(call: SyncStuckNativeTokenCall) {
    this._call = call;
  }
}

export class UpdateValidatorPayeeCall extends ethereum.Call {
  get inputs(): UpdateValidatorPayeeCall__Inputs {
    return new UpdateValidatorPayeeCall__Inputs(this);
  }

  get outputs(): UpdateValidatorPayeeCall__Outputs {
    return new UpdateValidatorPayeeCall__Outputs(this);
  }
}

export class UpdateValidatorPayeeCall__Inputs {
  _call: UpdateValidatorPayeeCall;

  constructor(call: UpdateValidatorPayeeCall) {
    this._call = call;
  }

  get _payee(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateValidatorPayeeCall__Outputs {
  _call: UpdateValidatorPayeeCall;

  constructor(call: UpdateValidatorPayeeCall) {
    this._call = call;
  }
}

export class UpdateValidatorRefundShareCall extends ethereum.Call {
  get inputs(): UpdateValidatorRefundShareCall__Inputs {
    return new UpdateValidatorRefundShareCall__Inputs(this);
  }

  get outputs(): UpdateValidatorRefundShareCall__Outputs {
    return new UpdateValidatorRefundShareCall__Outputs(this);
  }
}

export class UpdateValidatorRefundShareCall__Inputs {
  _call: UpdateValidatorRefundShareCall;

  constructor(call: UpdateValidatorRefundShareCall) {
    this._call = call;
  }

  get refundShare(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateValidatorRefundShareCall__Outputs {
  _call: UpdateValidatorRefundShareCall;

  constructor(call: UpdateValidatorRefundShareCall) {
    this._call = call;
  }
}

export class WithdrawStuckERC20Call extends ethereum.Call {
  get inputs(): WithdrawStuckERC20Call__Inputs {
    return new WithdrawStuckERC20Call__Inputs(this);
  }

  get outputs(): WithdrawStuckERC20Call__Outputs {
    return new WithdrawStuckERC20Call__Outputs(this);
  }
}

export class WithdrawStuckERC20Call__Inputs {
  _call: WithdrawStuckERC20Call;

  constructor(call: WithdrawStuckERC20Call) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawStuckERC20Call__Outputs {
  _call: WithdrawStuckERC20Call;

  constructor(call: WithdrawStuckERC20Call) {
    this._call = call;
  }
}
